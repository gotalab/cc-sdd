# Generate Feature Requirements

I need to create detailed requirements for a feature specification. Please help me generate comprehensive functional and non-functional requirements.

## Feature Information
- **Feature Name**: {{FEATURE_NAME}}
- **Project Name**: {{PROJECT_NAME}}
- **Specification Path**: {{SPEC_PATH}}

## Context
{{#if EXISTING_SPEC}}
I have an existing specification document that includes the feature overview and initial analysis. Please build upon this foundation to create detailed requirements.
{{else}}
This is a requirements-first approach. Please create requirements based on the feature description provided.
{{/if}}

## Feature Details
{{FEATURE_DETAILS}}

## Current Understanding
{{#if CURRENT_ANALYSIS}}
Based on the current specification analysis:
{{CURRENT_ANALYSIS}}
{{/if}}

## Request

Please generate a comprehensive requirements document using **EARS (Easy Approach to Requirements Syntax)** format that includes:

### 1. Functional Requirements (using EARS keywords)
- Core functionality using SHALL statements
- Conditional behavior using IF-THEN statements  
- Temporal requirements using WHEN clauses
- Location/scope constraints using WHERE clauses
- Ongoing behavior using WHILE clauses

### 2. Non-Functional Requirements (using EARS format)
- Performance requirements with SHALL statements and measurable criteria
- Security requirements with specific SHALL obligations
- Scalability requirements with quantified SHALL statements
- Usability requirements with testable SHALL criteria
- Compatibility and reliability requirements

### 3. Constraints (EARS format)
- Technology stack SHALL requirements
- Platform SHALL requirements  
- Third-party dependency SHALL requirements
- Architecture SHALL constraints

### 4. Assumptions (EARS format)
- Environmental assumptions using SHALL statements
- Data availability assumptions
- User capability assumptions
- External system assumptions

## Expected Output Format

Please structure the requirements document using **EARS format** as follows:
```markdown
# Requirements Document - EARS Format

## Introduction
[Brief summary of what will be built and its purpose]

## Functional Requirements

### REQ-001: [Functional Area]
WHEN [trigger condition], the system SHALL [required behavior].

### REQ-002: [Conditional Requirement]  
IF [condition] THEN the system SHALL [action], OTHERWISE the system SHALL [alternative].

### REQ-003: [Scope Constraint]
WHERE [location/scope condition], the system SHALL [scoped behavior].

### REQ-004: [Continuous Requirement]
WHILE [ongoing condition], the system SHALL [sustained behavior].

## Non-Functional Requirements

### REQ-NFR-001: Performance
The system SHALL [performance requirement with measurable criteria].

### REQ-NFR-002: Security  
The system SHALL [security requirement with specific obligations].

### REQ-NFR-003: Usability
The system SHALL [usability requirement with testable criteria].

## Constraints

### REQ-CON-001: [Constraint Type]
The system SHALL [constraint requirement].

### REQ-CON-002: [Technical Limitation]  
The system SHALL [technical constraint].

## Assumptions

### REQ-ASM-001: [Environmental Assumption]
[Assumption description] SHALL [expected condition].

### REQ-ASM-002: [Data Assumption]
[Data/resource] SHALL [availability/accessibility requirement].
```

Please ensure all EARS requirements are:
- **Specific**: Use precise EARS keywords (SHALL, WHEN, IF-THEN, WHERE, WHILE)
- **Measurable**: Include quantifiable criteria in SHALL statements
- **Achievable**: Technically feasible within project constraints
- **Relevant**: Aligned with business objectives
- **Testable**: Each requirement should be verifiable using the EARS structure

After generating requirements, the next step will be design using `/kiro:spec-design {{FEATURE_NAME}}`.

---

*This prompt is part of the Kiro-style Spec-Driven Development workflow.*